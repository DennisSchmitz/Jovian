#!/usr/bin/env python3
"""
Thierry Janssens 01 July 2019
Add contigs withou blastn hits and magnitude information to the Krona chart. 

Usage:
  krona_magnitudes.py <input_taxtab> <input.blast> <input_stats> <output>

<input_taxtab> is the file generated by `ktClassifyBLAST` or by the mgkit function taxonutils lca.
<input_stat> is the file generated by `BBtools pileup.sh` script.
<output> is output taxMagtab; `ktImportTaxonomy` will use this to generate
a Krona chart where the size of the pie-parts are scaled to the number of 
aligned reads.

Example:
  krona_magnitudes.py data/taxonomic_classification/[sample_name].taxtab ata/taxonomic_classification/[sample_name].blastn data/scaffolds_filtered/[sample_name]_perMinLenFiltScaffold.stats data/taxonomic_classification/[sample_name].taxMagtab
"""

import pandas as pd
import numpy as np
from sys import argv

def diff(list1, list2):
    c = set(list1).union(set(list2))  # or c = set(list1) | set(list2)
    d = set(list1).intersection(set(list2))  # or d = set(list1) & set(list2)
    return list(c - d)

SCRIPT, INPUTTAX, INPUTBLAST, INPUTSTATS, OUTPUTFILE = argv

df_tax = pd.read_csv(INPUTTAX, sep = '\t')
df_blast = pd.read_csv(INPUTBLAST, sep = '\t')
df_blast = df_blast[df_blast.columns[0]]
df_blast = df_blast.unique()

df_nohits = pd.DataFrame(diff(df_blast, df_tax[df_tax.columns[0]]), columns = ['#queryID'])

df_nohits.insert(loc = 1, column = 'taxID', value = 0)
df_nohits.insert(2, 'Avg. log e-value', '1')
df_tax = df_tax.append(df_nohits, ignore_index = True, sort = False)
fields = ['#ID', 'Plus_reads', 'Minus_reads']

df_stats = pd.read_csv(INPUTSTATS, sep = '\t', usecols=fields)

df_stats["Nr_of_reads"] = df_stats["Plus_reads"].add(df_stats["Minus_reads"])
df_stats.drop(['Plus_reads', 'Minus_reads'], axis=1, inplace=True)

merged_tax_readCount = pd.merge(df_tax, df_stats, how = "left", left_on = "#queryID", right_on = "#ID").drop('#ID', axis=1)

merged_tax_readCount.to_csv(OUTPUTFILE, index = False, sep = "\t")

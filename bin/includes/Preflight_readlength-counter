#!/bin/bash
# shellcheck disable=SC1091

#* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#* Perform automatic detection of readlength
#* Change settings of config/pipeline_parameters.yaml accordingly
#* # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

#> find smallest file in input_dir
FILE1=$(find "${INPUT_DIR}" -type f -printf "%s %p\n" | sort -n | awk 'NR==1 {print $2}')
FILE2=$(find "${INPUT_DIR}" -type f -printf "%s %p\n" | sort -n | awk 'NR==2 {print $2}')
FILE3=$(find "${INPUT_DIR}" -type f -printf "%s %p\n" | sort -k 2 | awk 'NR==1 {print $2}')
FILE4=$(find "${INPUT_DIR}" -type f -printf "%s %p\n" | sort -k 2 | awk 'NR==2 {print $2}')

filearray=("${FILE1##*/}" "${FILE2##*/}" "${FILE3##*/}" "${FILE3##*/}")

#> get average reads length per file
AVG_LENGTH1=$(pv "${FILE1}" | unpigz -c -p "${USE_CORES}" --force | awk '{if(NR%4==2) {count++; bases += length} } END{print bases/count}')
AVG_LENGTH2=$(pv "${FILE2}" | unpigz -c -p "${USE_CORES}" --force | awk '{if(NR%4==2) {count++; bases += length} } END{print bases/count}') 
AVG_LENGTH3=$(pv "${FILE3}" | unpigz -c -p "${USE_CORES}" --force | awk '{if(NR%4==2) {count++; bases += length} } END{print bases/count}') 
AVG_LENGTH4=$(pv "${FILE4}" | unpigz -c -p "${USE_CORES}" --force | awk '{if(NR%4==2) {count++; bases += length} } END{print bases/count}') 

#> Calculate single average length based on the sampled files
array=("${AVG_LENGTH1%.*}" "${AVG_LENGTH2%.*}" "${AVG_LENGTH3%.*}" "${AVG_LENGTH4%.*}")
n=4
m=$n
sum=0

while [ $n -gt 0 ]
do
	num=${array[$((n -1))]}
	sum=$((sum + num))
	n=$((n - 1))
done
avg=$(echo "$sum / $m" | bc -l)
AVERAGE=$(printf '%0.0f' "$avg")


###> Print results
printf "done\n"
printf "The average read length is %s NT\n" "${AVERAGE}"
printf "This value is rounded to the nearest number and based on the following 4 samples:\n"
printf '%s\n' "${filearray[@]}"
printf "\n"


###> Change parameters of `config/pipeline_parameters.yaml` to best match settings
if [[ "${AVERAGE}" -gt "305" ]]
then
    echo -e "\tAverage read lenght is >305, are you sure this is illumina data? Are you sure the input data is a proper 4 lines per fastq record format?"
    echo -e "Exiting..."; exit 1
elif [[ "${AVERAGE}" -ge "250" ]]
then
    echo -e "\tAverage read length is >=250 and <=305. \n\tSetting large kmer sizes."
    ##! http://cab.spbu.ru/files/release3.11.0/manual.html#sec3.4 (we use version 3.11.0 in Jovian)
elif [[ "${AVERAGE}" -ge "50" ]]
then
    echo -e "\tAverage read length is >=50 and <250. \n\tSetting small kmer sizes."
    ##! http://cab.spbu.ru/files/release3.11.0/manual.html#sec3.4 (we use version 3.11.0 in Jovian)
elif [[ "${AVERAGE}" -lt "50" ]]
then
    echo -e "\tAverage read length is <50, the pipeline doesn't work properly with such short reads."
    echo -e "Exiting..."; exit 1
fi

exit 0